<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="lblTrocar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAABGdBTUEAALGPC/xhBQAABDJJREFUWEe9
        mNlvTFEcx6cvlgTBn2J5EA3Tmal778w9Y9CJKhpRVKWWWCIhYkkkDSnKaFMRCSKCEDsRQU14UMTotGr3
        QMWWNNWi2xznd+ZMe++d371zZ+s3+Ty053fO7zvn3LM6spWiKBPcMpnuVkjAraiLAY9E5hZ7vdOgTISN
        qAqKFTLbLfuOuiW1zS2r1JJ4TMjl9c6CuvEm8iDWG6Ndkrqa9da7JBO2gbqkEtoSzeZGLoUo2RnT45HV
        tx7ZJ4nmMxf8UtZgnTFBrmBGT80IBseKdOlJkqTJrJFHxkbzQLjQ55sk0tqTMBcxNJRPIrZNOp3OMazC
        SPSckbCtyeOSSD1SOWMO1IVoReUatMyISyaHhQ1c8dmKV86Ub9++0/7+fnr2/AUqk3lojBbmYY6wo1d8
        aHO3lCQAgwl9/PiJVq/fhMZpeB0MBkcJW8PyKL4qJDhrtAZBsViMXr95i6rzStB4wKOoK4WtIRVk03uB
        klJTvv/4Iazp9aWjg27eug1tj+3nb8BT3BoTWzCdaGAKPAqhkZctImX6gt68ces2byepbZkUCnsOB9/4
        DQF2qNlfK1Jlrs+fv1Dv3AVJbetmNPtHuzEgFYp//tD39aT5Ka1auwGls7OTxxg1MDBAz124SL2sHax9
        RpSbgzMb+yNmKEzJvtqDPNHg4CBdvqoKjQF+/vzF47R69/4DN4/Fa4jN9PvHs95jh008wJIVq6tpx9ev
        9NSZs2h5Aq3Bvr4+euLkaSqpATTWCNs0pjjg9IsV5oqEwda2V5Y9jeFSVAITZAlWaMX2nbvpuo1b0DIj
        Dx6GaaihEZ2pKWHXh7QMlixaQh80hXmPXLl2A43JKWDQ7hDX7D9Au7q6uDlQKoMNx47TulA9WmYXMcTW
        k6SsfDltfvpM2BqWlcFtO3aJKMp7HYuxA58kZssMfDNH6hvpnz9/RSq9zAwWe/38UABqibaiMTaJOZ3B
        cXwtdMnqK21h6dJlNNraxpOYCZaMrt+/k+ju7ublsI1Vb0h5cjGFDW8LNwdi/whpCzexTfxfby9PlKnu
        Nz3UJcyAOmHP4YhfxPUB5RWraKTF/CDw/EWEn5YxYI+2Ok7ZoUjxzxT2uArgrmoMgu8QEvb09Ahbw7p0
        +aouNqcYj1sgNpsr0WBGsKychh89FtbiyqtBmVQIW8OCGxXWi1r27K0ZOp3k0WA7euQHwXMEUkHH/IWL
        6Z279+ihI0fR8iyJeSSfR9jBxYJ0M3okYbvaQWHDXOI9JmysnHck0mQ6tEbBMwSrNJJPHy+cgcBEkd6e
        hMn89yTrubTNJSSGG57f0r4S2IM02h5WK8FzBCyeeJKMaE85W9MV/FK48adaKy3hP5JU5KTXLMS2RVLI
        EsLQR3UGkoFPI8qMHRIX8fw9opsJroZFc3xTi2Sfn61jZQCchOGwOXSey1gOx39GchwhZEx+kgAAAABJ
        RU5ErkJggg==
</value>
  </data>
</root>